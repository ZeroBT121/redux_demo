{"version":3,"sources":["redux/constant.js","redux/actions/count.js","pages/Count/index.js","pages/Person/index.js","redux/actions/person.js","App.js","redux/reducers/person.js","redux/store.js","redux/reducers/count.js","index.js"],"names":["INCREMENT","DECREMENT","ADD_PERSON","createIncrementAction","data","type","Count","state","carName","increment","value","selectNumber","props","jia","decrement","jian","incrementIfOdd","count","incrementAsync","jiaAsync","this","renshu","ref","c","onClick","Component","connect","he","rens","length","time","dispatch","setTimeout","Person","addPerson","name","nameNode","age","ageNode","personObj","id","nanoid","jiaYiRen","placeholder","yiduiren","map","p","App","className","initState","allReducer","combineReducers","preState","action","createStore","applyMiddleware","thunk","rootElement","document","getElementById","ReactDOM","render","store"],"mappings":"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","file":"static/js/main.1c0cd7a4.chunk.js","sourcesContent":["/* \r\n\t该模块是用于定义action对象中type类型的常量值，目的只有一个：便于管理的同时防止程序员单词写错\r\n*/\r\nexport const INCREMENT = \"increment\";\r\nexport const DECREMENT = \"decrement\";\r\nexport const ADD_PERSON = \"add_person\";\r\n","/* \r\n\t该文件专门为Count组件生成action对象\r\n*/\r\nimport { INCREMENT, DECREMENT } from \"../constant\";\r\n\r\n//同步action，就是指action的值为Object类型的一般对象\r\nexport const createIncrementAction = (data) => ({ type: INCREMENT, data });\r\nexport const createDecrementAction = (data) => ({ type: DECREMENT, data });\r\n\r\n//异步action，就是指action的值为函数,异步action中一般都会调用同步action，异步action不是必须要用的。\r\nexport const createIncrementAsyncAction = (data, time) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(createIncrementAction(data));\r\n    }, time);\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n//引入action\r\nimport {\r\n  createIncrementAction,\r\n  createDecrementAction,\r\n  createIncrementAsyncAction\r\n} from \"../../redux/actions/count\";\r\n//引入connect用于连接UI组件与redux\r\nimport { connect } from \"react-redux\";\r\n\r\n//定义UI组件\r\nclass Count extends Component {\r\n  state = { carName: \"奔驰c63\" };\r\n\r\n  //加法\r\n  increment = () => {\r\n    const { value } = this.selectNumber;\r\n    this.props.jia(value * 1);\r\n  };\r\n  //减法\r\n  decrement = () => {\r\n    const { value } = this.selectNumber;\r\n    this.props.jian(value * 1);\r\n  };\r\n  //奇数再加\r\n  incrementIfOdd = () => {\r\n    const { value } = this.selectNumber;\r\n    if (this.props.count % 2 !== 0) {\r\n      this.props.jia(value * 1);\r\n    }\r\n  };\r\n  //异步加\r\n  incrementAsync = () => {\r\n    const { value } = this.selectNumber;\r\n    this.props.jiaAsync(value * 1, 500);\r\n  };\r\n\r\n  render() {\r\n    //console.log('UI组件接收到的props是',this.props);\r\n    return (\r\n      <div>\r\n        <h2>我是Count组件,下方组件总人数为:{this.props.renshu}</h2>\r\n        <h4>当前求和为：{this.props.count}</h4>\r\n        <select ref={(c) => (this.selectNumber = c)}>\r\n          <option value=\"1\">1</option>\r\n          <option value=\"2\">2</option>\r\n          <option value=\"3\">3</option>\r\n        </select>\r\n        &nbsp;\r\n        <button onClick={this.increment}>+</button>&nbsp;\r\n        <button onClick={this.decrement}>-</button>&nbsp;\r\n        <button onClick={this.incrementIfOdd}>当前求和为奇数再加</button>&nbsp;\r\n        <button onClick={this.incrementAsync}>异步加</button>&nbsp;\r\n      </div>\r\n    );\r\n  }\r\n}\r\n//使用connect()()创建并暴露一个Count的容器组件\r\nexport default connect(\r\n  (state) => ({\r\n    count: state.he,\r\n    renshu: state.rens.length\r\n  }),\r\n  {\r\n    jia: createIncrementAction,\r\n    jian: createDecrementAction,\r\n    jiaAsync: createIncrementAsyncAction\r\n  }\r\n)(Count);\r\n","import React, { Component } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { connect } from \"react-redux\";\r\nimport { createAddPersonAction } from \"../../redux/actions/person\";\r\n\r\nclass Person extends Component {\r\n  addPerson = () => {\r\n    const name = this.nameNode.value;\r\n    const age = this.ageNode.value;\r\n    const personObj = { id: nanoid(), name, age };\r\n    this.props.jiaYiRen(personObj);\r\n    this.nameNode.value = \"\";\r\n    this.ageNode.value = \"\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>我是Person组件,上方组件求和为{this.props.he}</h2>\r\n        <input\r\n          ref={(c) => (this.nameNode = c)}\r\n          type=\"text\"\r\n          placeholder=\"输入名字\"\r\n        />\r\n        <input\r\n          ref={(c) => (this.ageNode = c)}\r\n          type=\"text\"\r\n          placeholder=\"输入年龄\"\r\n        />\r\n        <button onClick={this.addPerson}>添加</button>\r\n        <ul>\r\n          {this.props.yiduiren.map((p) => {\r\n            return (\r\n              <li key={p.id}>\r\n                {p.name}--{p.age}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  (state) => ({ yiduiren: state.rens, he: state.he }), //映射状态\r\n  { jiaYiRen: createAddPersonAction } //映射操作状态的方法\r\n)(Person);\r\n","import { ADD_PERSON } from \"../constant\";\r\n\r\n//创建增加一个人的action动作对象\r\nexport const createAddPersonAction = (personObj) => ({\r\n  type: ADD_PERSON,\r\n  data: personObj\r\n});\r\n","import \"./styles.css\";\nimport Count from \"./pages/Count\";\nimport Person from \"./pages/Person\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Count />\n      <hr />\n      <Person />\n    </div>\n  );\n}\n","import { ADD_PERSON } from \"../constant\";\r\n\r\n//初始化人的列表\r\nconst initState = [{ id: \"001\", name: \"tom\", age: 18 }];\r\n\r\nexport default function personReducer(preState = initState, action) {\r\n  // console.log('personReducer@#@#@#');\r\n  const { type, data } = action;\r\n  switch (type) {\r\n    case ADD_PERSON: //若是添加一个人\r\n      return [data, ...preState];\r\n    default:\r\n      return preState;\r\n  }\r\n}\r\n","/* \r\n\t该文件专门用于暴露一个store对象，整个应用只有一个store对象\r\n*/\r\n\r\n//引入createStore，专门用于创建redux中最为核心的store对象\r\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\r\n//引入为Count组件服务的reducer\r\nimport countReducer from \"./reducers/count\";\r\n//引入为Count组件服务的reducer\r\nimport personReducer from \"./reducers/person\";\r\n//引入redux-thunk，用于支持异步action\r\nimport thunk from \"redux-thunk\";\r\n\r\n//汇总所有的reducer变为一个总的reducer\r\nconst allReducer = combineReducers({\r\n  he: countReducer,\r\n  rens: personReducer\r\n});\r\n\r\n//暴露store\r\nexport default createStore(allReducer, applyMiddleware(thunk));\r\n","/* \r\n\t1.该文件是用于创建一个为Count组件服务的reducer，reducer的本质就是一个函数\r\n\t2.reducer函数会接到两个参数，分别为：之前的状态(preState)，动作对象(action)\r\n*/\r\nimport { INCREMENT, DECREMENT } from \"../constant\";\r\n\r\nconst initState = 0; //初始化状态\r\nexport default function countReducer(preState = initState, action) {\r\n  // console.log('countReducer@#@#@#');\r\n  //从action对象中获取：type、data\r\n  const { type, data } = action;\r\n  //根据type决定如何加工数据\r\n  switch (type) {\r\n    case INCREMENT: //如果是加\r\n      return preState + data;\r\n    case DECREMENT: //若果是减\r\n      return preState - data;\r\n    default:\r\n      return preState;\r\n  }\r\n}\r\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}